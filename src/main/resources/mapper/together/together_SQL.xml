<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="together">

	<!-- 23.01.12 박선영: 함께해요 게시판 리스트 출력 및 검색  -->
	<!-- 23.01.21 박선영 : 견종 테이블과 조인으로 변경 -->
	<!-- 23.01.23 박선영 : 삭제 기능 구현하면서 삭제여부가 N 인 게시글만 출력조건 추가 -->
	<!-- 23.01.30 박선영 : 참여인원 쿼리문 수정 -->
	<select id="togetherList" resultType="hashmap">
		<include refid="common.pagingPre"/>
		<![CDATA[
		select 
				ROW_NUMBER() OVER (ORDER BY TO_IDX DESC) RNUM, 
				t.to_idx,
				t.to_title,
				t.to_tc_name,
				t.to_contents,
				t.to_writer_id,
				t.to_writer_name,
				to_char(to_date, 'yyyy-MM-dd')as TO_DATE,
				t.to_time,
				t.to_people,
				(select count(tw_idx) from together_with where tw_to_idx = to_idx) as C,
				t.to_loc,
				t.to_br_idx,
				t.to_wt_idx,
				to_char(to_reg_date, 'YYYY-MM-DD')as TO_REG_DATE,
				to_char(to_mod_date, 'YYYY-MM-DD')as TO_MOD_DATE,
				t.to_del_gb,
				c.tc_idx,
				c.tc_name,
				c.tc_count,
				b.br_idx,
				b.br_name
				from together t, together_cate c, breed b
				where t.to_tc_name = c.tc_name
				and t.to_br_idx = b.br_idx
				and t.to_del_gb ='N'
	
		]]>
		<if test="subKeyword != null">
			AND to_title like '%' || #{subKeyword} || '%'
		</if>
			 group by
					t.to_idx,
					t.to_title,
					t.to_tc_name,
					t.to_contents,
					t.to_writer_id,
					t.to_writer_name,
					TO_DATE,
					t.to_time,
					t.to_people,
					t.to_loc,
					t.to_br_idx,
					t.to_wt_idx,
					TO_REG_DATE,
					TO_MOD_DATE,
					t.to_del_gb,
					c.tc_idx,
					c.tc_name,
					c.tc_count,
					b.br_idx,
					b.br_name 

		<include refid="common.pagingPost"/>
	</select>
	
	
	
	<!-- 23.01.13 박선영: 게시글 작성폼  -->
	<!-- 23.01.21 박선영 : 견종명이 아닌 견종 번호로 입력 받을 수 있도록 변경 -->
	<!-- 23.01.30 박선영 : 세션 이용 작성자 아이디 전송 -->
	<insert id="togetherWrite" parameterType="hashmap">
		<![CDATA[
			insert into TOGETHER(
				TO_IDX,
				TO_TITLE,
				TO_TC_NAME,
				TO_CONTENTS,
				TO_DATE,
				TO_TIME,
				TO_PEOPLE,
				TO_LOC,
				TO_BR_IDX,
				TO_WT_IDX,
				TO_REG_DATE,
				TO_MOD_DATE,
				TO_DEL_GB,
				TO_WRITER_ID
				) 
				VALUES(
				seq_together.nextval, 
				#{TO_TITLE, jdbcType=VARCHAR},
				#{TO_TC_NAME, jdbcType=VARCHAR},
				#{TO_CONTENTS, jdbcType=VARCHAR},
				#{TO_DATE, jdbcType=VARCHAR},
				#{TO_TIME, jdbcType=VARCHAR},
				#{TO_PEOPLE, jdbcType=VARCHAR},
				#{TO_LOC, jdbcType=VARCHAR},
				#{TO_BR_IDX, jdbcType=VARCHAR},
				#{TO_WT_IDX, jdbcType=VARCHAR},
				sysdate,
				sysdate,
				'N',
				#{TO_WRITER_ID, jdbcType=VARCHAR}
				)
		]]>
	</insert>

	
	<!-- 23.01.18 박선영: 함께해요 게시글 상세보기 -->
	<!-- 23.01.21 박선영 : 견종 테이블 조인하고 게시글 견종번호로 수정 -->
	<!-- 23.01.30 박선영 : 참여인원 쿼리문 수정 -->
	<select id="togetherDetail" resultType="hashmap">
		<![CDATA[
			SELECT t.TO_IDX,
					t.TO_TITLE,
					t.TO_TC_NAME,
					t.TO_CONTENTS,
					t.TO_WRITER_ID,
					t.TO_WRITER_NAME,
					TO_CHAR(TO_DATE, 'YYYY-MM-DD')as TO_DATE,
					t.TO_TIME,
					t.TO_PEOPLE,
					(select count(TW_IDX) from together_with where TW_TO_IDX = TO_IDX) as C,
					t.TO_LOC,
					t.TO_BR_IDX,
					t.TO_WT_IDX,
					t.TO_REG_DATE,
					t.TO_MOD_DATE,
					t.TO_DEL_GB,
					c.TC_IDX,
					c.TC_NAME,
					c.TC_COUNT,
					b.BR_IDX,
					b.BR_NAME
					FROM TOGETHER t, TOGETHER_CATE c,BREED b
					WHERE t.TO_TC_NAME = c.TC_NAME
					AND t.TO_BR_IDX = b.BR_IDX
					AND t.TO_IDX=#{TO_IDX, jdbcType=VARCHAR}
		]]>
	</select>
	
	<!-- 23.01.19 박선영 함께해요 카테고리별 리스트 출력 -->
	<!-- 23.01.21 박선영 : 견종 테이블 조인하고 게시글 견종번호로 수정 -->
	<!-- 23.01.31 박선영 : 참여인원 반영 수정 -->
	<!-- 23.02.02 박선영 카테고리별 리스트 페이징 -->
	<select id="togetherCateList" resultType="hashmap">
		<include refid="common.pagingPre"/>
		<![CDATA[
			SELECT ROW_NUMBER() OVER (ORDER BY TO_IDX DESC) RNUM,
				t.TO_IDX,
				t.TO_TITLE,
				t.TO_TC_NAME,
				t.TO_CONTENTS,
				t.TO_WRITER_ID,
				t.TO_WRITER_NAME,
				TO_CHAR(TO_DATE, 'YYYY-MM-DD')as TO_DATE,
				t.TO_TIME,
				t.TO_PEOPLE,
				(select count(tw_idx) from together_with where tw_to_idx = to_idx) as C,
				t.TO_LOC,
				t.TO_BR_IDX,
				t.TO_WT_IDX,
				TO_CHAR(TO_REG_DATE, 'YYYY-MM-DD')as TO_REG_DATE,
				TO_CHAR(TO_MOD_DATE, 'YYYY-MM-DD')as TO_MOD_DATE,
				t.TO_DEL_GB,
				c.TC_IDX,
				c.TC_NAME,
				c.TC_COUNT,
				b.BR_IDX,
				b.BR_NAME 
				from TOGETHER t, TOGETHER_CATE c, BREED b
				where t.TO_TC_NAME = c.TC_NAME
				AND t.TO_BR_IDX = b.BR_IDX
				AND t.TO_DEL_GB = 'N'
				AND c.TC_NAME=#{TC_NAME, jdbcType=VARCHAR}
		]]>
		<if test="subKeyword != null">
			AND (to_title like '%' || #{subKeyword} || '%')
			OR (to_tc_name like '%' || #{subKeyword} || '%')
			OR (to_br_name like '%' || #{subKeyword} || '%')
		</if>
		<include refid="common.pagingPost"/>
	</select>
	
	<!-- 23.01.20 박선영 : 게시글 수정 구현 -->
	<!-- 23.01.21 박선영 : 견종이름을 견종번호로 수정 -->
	<update id="togetherModi" parameterType="hashmap">
		<![CDATA[
			update
				TOGETHER
			set
				TO_TITLE = #{TO_TITLE},
				TO_TC_NAME = #{TO_TC_NAME},
				TO_CONTENTS = #{TO_CONTENTS},
				TO_DATE = #{TO_DATE},
				TO_TIME = #{TO_TIME},
				TO_PEOPLE = #{TO_PEOPLE},
				TO_LOC = #{TO_LOC},
				TO_BR_IDX = #{TO_BR_IDX},
				TO_WT_IDX = #{TO_WT_IDX},
				TO_MOD_DATE = SYSDATE
			where
				TO_IDX = #{TO_IDX}
			and 
				TO_WRITER_ID = #{TO_WRITER_ID, jdbcType=VARCHAR}
		]]>
	</update>
	
	<!--23.01.21 박선영 : 견종분류 리스트  -->
	<select id="togetherbreed" resultType="hashmap">
		<![CDATA[
			SELECT BR_IDX, BR_NAME
			FROM BREED
		]]>
	</select>
	
	<!--23.01.21 박선영 : 참여자 리스트  -->
	<select id="togetherWithList" resultType="hashmap">
		<![CDATA[
			SELECT  TW_IDX,
					TW_TO_IDX,
					TW_MEM_ID
			FROM TOGETHER_WITH
			WHERE TW_TO_IDX = #{TO_IDX}
		]]>
	</select>
	
	
	<!-- 23.01.23 박선영 : 게시글 삭제기능 구현 -->
	<update id="togetherDel" parameterType="hashmap">
		<![CDATA[
			UPDATE TOGETHER
			SET TO_DEL_GB = 'Y'
			WHERE TO_IDX=#{TO_IDX}
		]]>
	</update>
	
	<!-- 23.01.25 박선영 : 카테고리 리스트 -->
	<select id="togetherCate" resultType="hashmap">
		<![CDATA[
			SELECT  TC_IDX,
					TC_NAME,
					TC_COUNT
			FROM TOGETHER_CATE
		]]>
	</select>

	
	<!-- 23.01. 27 박선영 : 참여하기 -->
	<insert id="togetherWith" parameterType="hashmap">
		<![CDATA[
			INSERT INTO TOGETHER_WITH(
			TW_IDX,
			TW_TO_IDX,
			TW_MEM_ID)
			VALUES(
			seq_together_with.NEXTVAL,
			#{TW_TO_IDX, jdbcType=VARCHAR},
			#{TW_MEM_ID, jdbcType=VARCHAR}
			)
		]]>
	</insert>
	
	<!-- 23.01.31 박선영 : 참여하기 취소 -->
	<delete id="togetherWithDel">
		<![CDATA[
			DELETE 
			FROM TOGETHER_WITH
			WHERE 
				TW_TO_IDX = #{TW_TO_IDX, jdbcType=VARCHAR}
			AND 
				TW_MEM_ID = #{TW_MEM_ID, jdbcType=VARCHAR}
		]]>
	</delete>
	
	<!-- 23.01.31 박선영 : 참여하기 여부 확인 -->
	<select id="checkWith" resultType="hashmap">
		<![CDATA[
			SELECT * FROM TOGETHER_WITH
			WHERE 
				TW_TO_IDX = #{TO_IDX, jdbcType=VARCHAR}
			AND 
				TW_MEM_ID = #{mem_id, jdbcType=VARCHAR}
		]]>
	</select>
	
	<!-- 23.02.06 박선영 : 참여멤버 정보 확인 -->
	<select id="checkMem" resultType="hashmap">
		<![CDATA[
			SELECT m.MEM_ID,
				   m.MEM_DOG_NAME,
				   m.MEM_DOG_WEIGHT,
				   m.MEM_DOG_ETC,
				   m.MEM_BR_IDX,
				   TO_CHAR(MEM_REG_DATE, 'YYYY-MM-DD')as MEM_REG_DATE,
				   b.BR_IDX,
				   b.BR_NAME,
				   w.TW_TO_IDX,
				   (SELECT COUNT (TW_IDX) FROM TOGETHER_WITH WHERE TW_MEM_ID = MEM_ID) AS WITH_COUNT
			FROM MEMBERS m, BREED b, TOGETHER_WITH w
			WHERE 
				MEM_ID = #{TW_MEM_ID, jdbcType=VARCHAR}
			AND 
				m.MEM_BR_IDX = b.BR_IDX
			AND 
				w.TW_TO_IDX = #{TO_IDX,jdbcType=VARCHAR}
			 GROUP BY m.MEM_ID,
					   m.MEM_DOG_NAME,
					   m.MEM_DOG_WEIGHT,
					   m.MEM_DOG_ETC,
					   m.MEM_BR_IDX,
					   b.BR_IDX,
					   b.BR_NAME,
					   w.TW_TO_IDX,
					   MEM_REG_DATE	
		]]>
	</select>
	
	<!-- 23.02.06 박선영 : 작성자 정보 확인 -->
	<select id="checkWriter" resultType="hashmap">
		<![CDATA[
			SELECT m.MEM_ID,
				   m.MEM_DOG_NAME,
				   m.MEM_DOG_WEIGHT,
				   m.MEM_DOG_ETC,
				   m.MEM_BR_IDX,
				   TO_CHAR(MEM_REG_DATE, 'YYYY-MM-DD')as MEM_REG_DATE,
				   b.BR_IDX,
				   b.BR_NAME,
				   t.TO_IDX, 
				   t.TO_WRITER_ID
			FROM MEMBERS m, BREED b, TOGETHER t
			WHERE 
				MEM_ID = #{TO_WRITER_ID, jdbcType = VARCHAR}
			AND 
				m.MEM_BR_IDX = b.BR_IDX
			AND 
				t.TO_IDX = #{TO_IDX, jdbcType = VARCHAR}
			 GROUP BY m.MEM_ID,
					   m.MEM_DOG_NAME,
					   m.MEM_DOG_WEIGHT,
					   m.MEM_DOG_ETC,
					   m.MEM_BR_IDX,
					   b.BR_IDX,
					   b.BR_NAME,
					  t.TO_IDX, 
					   t.TO_WRITER_ID,
					   MEM_REG_DATE
		]]>
	</select>
	
	
</mapper>